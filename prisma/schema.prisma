// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id      Int      @id @default(autoincrement())
  user_name    String
  user_phone   String   @unique
  user_address String
  user_email   String   @unique
  password     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // many to one relation
  role   Roles @relation(fields: [roleId], references: [role_id])
  roleId Int

  // one to many relation
  transactions Transactions[]

  // one to one relation
  bank Banks?
}

model Roles {
  role_id   Int      @id @default(autoincrement())
  role_desc String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // one to many relation
  users Users[]
}

model Banks {
  bank_id   Int      @id @default(autoincrement())
  bank_name String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // one to one relation
  user   Users @relation(fields: [userId], references: [user_id])
  userId Int   @unique
}

model Products {
  product_id    Int      @id @default(autoincrement())
  product_name  String   @unique
  product_price Int
  product_stock Int
  product_image String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // many to one relation
  categorie  Categories @relation(fields: [categoryId], references: [category_id])
  categoryId Int

  // one to many relation
  transactionsOnProduct TransactionsOnProducts[]
}

model Categories {
  category_id   Int        @id @default(autoincrement())
  category_name String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  products      Products[]
}

model TransactionsOnProducts {
  transactionOnProductId Int      @id @default(autoincrement())
  assignedAt             DateTime @default(now())

  // many to one relation
  product   Products @relation(fields: [productId], references: [product_id])
  productId Int

  // many to one relation
  transaction   Transactions @relation(fields: [transactionId], references: [transaction_id])
  transactionId Int
}

model Transactions {
  transaction_id       Int      @id @default(autoincrement())
  transaction_total    Int
  transaction_quantity Int
  transaction_shipping Int
  transaction_slip     String
  transaction_end_date DateTime
  transaction_at       DateTime @default(now())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // many to one relation
  status   Status @relation(fields: [statusId], references: [status_id])
  statusId Int

  // many to one relation
  users  Users @relation(fields: [userId], references: [user_id])
  userId Int

  // one to many relation
  transactionsOnProduct TransactionsOnProducts[]
}

model Status {
  status_id   Int      @id @default(autoincrement())
  status_desc String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // many to one relation
  transactions Transactions[]
}
